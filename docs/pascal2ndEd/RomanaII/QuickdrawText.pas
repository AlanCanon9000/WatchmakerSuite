{	File:		QuickdrawText.p	 Pascal Interface to the Macintosh Libraries	Copyright:	© 1983-1992 by Apple Computer, Inc.	All rights reserved.	Change History (most recent first):		 <3>	  8/4/92	DCL		Changed the textLen parameter to textLength in the prototypes									for PortionText, VisibleLength, PixelToChar & CharToPixel.		 <2>	 5/29/92	DCL		Moved StdText from QuickDraw to QuickDrawText and fixed up some									comments.		 <1>	  5/5/92	DCL		first checked in} UNIT QuickdrawText; INTERFACE USES Types, IntlResources;CONST{ CharToPixel directions }leftCaret = 0;								{Place caret for left block}rightCaret = -1;								{Place caret for right block}hilite = 1;									{Direction is SysDirection}smLeftCaret = 0;								{Place caret for left block        obsolete }smRightCaret = -1;								{Place caret for right block    obsolete }smHilite = 1;									{Direction is TESysJust            obsolete }{Constants for styleRunPosition argument in PortionLine, DrawJustified, MeasureJustified, CharToPixel, and PixelToChar.}onlyStyleRun = 0;								{ This is the only style run on the line }leftStyleRun = 1;								{ This is leftmost of multiple style runs on the line }rightStyleRun = 2;								{ This is rightmost of multiple style runs on the line }middleStyleRun = 3;							{ There are multiple style runs on the line and this  is neither the leftmost nor the rightmost. }smOnlyStyleRun = 0;								{      obsolete  }smLeftStyleRun = 1;								{      obsolete  }smRightStyleRun = 2;								{      obsolete  }smMiddleStyleRun = 3;							{      obsolete  }TYPE{ type for styleRunPosition parameter in PixelToChar etc. }JustStyleCode = INTEGER;FontInfo = RECORD ascent: INTEGER; descent: INTEGER; widMax: INTEGER; leading: INTEGER; END;FormatOrder = ARRAY [0..0] OF INTEGER;FormatOrderPtr = ^FormatOrder;FormatStatus = INTEGER;FUNCTION Pixel2Char(textBuf: Ptr;textLen: INTEGER;slop: INTEGER;pixelWidth: INTEGER; VAR leadingEdge: BOOLEAN): INTEGER;FUNCTION Char2Pixel(textBuf: Ptr;textLen: INTEGER;slop: INTEGER;offset: INTEGER; direction: INTEGER): INTEGER;FUNCTION PixelToChar(textBuf: Ptr;textLength: LONGINT;slop: Fixed;pixelWidth: Fixed; VAR leadingEdge: BOOLEAN;VAR widthRemaining: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point): INTEGER;FUNCTION NPixel2Char(textBuf: Ptr;textLen: LONGINT;slop: Fixed;pixelWidth: Fixed; VAR leadingEdge: BOOLEAN;VAR widthRemaining: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point): INTEGER;FUNCTION CharToPixel(textBuf: Ptr;textLength: LONGINT;slop: Fixed;offset: LONGINT; direction: INTEGER;styleRunPosition: JustStyleCode;numer: Point;denom: Point): INTEGER;FUNCTION NChar2Pixel(textBuf: Ptr;textLen: LONGINT;slop: Fixed;offset: LONGINT; direction: INTEGER;styleRunPosition: JustStyleCode;numer: Point;denom: Point): INTEGER;PROCEDURE DrawJustified(textPtr: Ptr;textLength: LONGINT;slop: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point);PROCEDURE NDrawJust(textPtr: Ptr;textLength: LONGINT;slop: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point);PROCEDURE MeasureJustified(textPtr: Ptr;textLength: LONGINT;slop: Fixed;charLocs: Ptr; styleRunPosition: JustStyleCode;numer: Point;denom: Point);PROCEDURE NMeasureJust(textPtr: Ptr;textLength: LONGINT;slop: Fixed;charLocs: Ptr; styleRunPosition: JustStyleCode;numer: Point;denom: Point);FUNCTION NPortionText(textPtr: Ptr;textLen: LONGINT;styleRunPosition: JustStyleCode; numer: Point;denom: Point): Fixed;FUNCTION PortionLine(textPtr: Ptr;textLen: LONGINT;styleRunPosition: JustStyleCode; numer: Point;denom: Point): Fixed;PROCEDURE HiliteText(textPtr: Ptr;textLength: INTEGER;firstOffset: INTEGER; secondOffset: INTEGER;VAR offsets: OffsetTable);PROCEDURE DrawJust(textPtr: Ptr;textLength: INTEGER;slop: INTEGER);PROCEDURE MeasureJust(textPtr: Ptr;textLength: INTEGER;slop: INTEGER;charLocs: Ptr);FUNCTION PortionText(textPtr: Ptr;textLength: LONGINT): Fixed;FUNCTION VisibleLength(textPtr: Ptr;textLength: LONGINT): LONGINT;PROCEDURE GetFormatOrder(ordering: FormatOrderPtr;firstFormat: INTEGER; lastFormat: INTEGER;lineRight: BOOLEAN;rlDirProc: Ptr;dirParam: Ptr);PROCEDURE TextFont(font: INTEGER);PROCEDURE TextFace(face: Style);PROCEDURE TextMode(mode: INTEGER);PROCEDURE TextSize(size: INTEGER);PROCEDURE SpaceExtra(extra: Fixed);PROCEDURE DrawChar(ch: CHAR);PROCEDURE DrawString(s: Str255);PROCEDURE DrawText(textBuf: Ptr;firstByte: INTEGER;byteCount: INTEGER);FUNCTION CharWidth(ch: CHAR): INTEGER;FUNCTION StringWidth(s: Str255): INTEGER;FUNCTION TextWidth(textBuf: Ptr;firstByte: INTEGER;byteCount: INTEGER): INTEGER;PROCEDURE MeasureText(count: INTEGER;textAddr: Ptr;charLocs: Ptr);PROCEDURE GetFontInfo(VAR info: FontInfo);PROCEDURE CharExtra(extra: Fixed);PROCEDURE StdText(count: INTEGER;textAddr: Ptr;numer: Point;denom: Point);FUNCTION StdTxMeas(byteCount: INTEGER;textAddr: Ptr;VAR numer: Point;VAR denom: Point; VAR info: FontInfo): INTEGER;IMPLEMENTATIONFUNCTION Pixel2Char(textBuf: Ptr;textLen: INTEGER;slop: INTEGER;pixelWidth: INTEGER; VAR leadingEdge: BOOLEAN): INTEGER; BEGIN Pixel2Char := 0 END;FUNCTION Char2Pixel(textBuf: Ptr;textLen: INTEGER;slop: INTEGER;offset: INTEGER; direction: INTEGER): INTEGER; BEGIN Char2Pixel := 0 END;FUNCTION PixelToChar(textBuf: Ptr;textLength: LONGINT;slop: Fixed;pixelWidth: Fixed; VAR leadingEdge: BOOLEAN;VAR widthRemaining: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point): INTEGER; BEGIN PixelToChar := 0 END;FUNCTION NPixel2Char(textBuf: Ptr;textLen: LONGINT;slop: Fixed;pixelWidth: Fixed; VAR leadingEdge: BOOLEAN;VAR widthRemaining: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point): INTEGER; BEGIN NPixel2Char := 0 END;FUNCTION CharToPixel(textBuf: Ptr;textLength: LONGINT;slop: Fixed;offset: LONGINT; direction: INTEGER;styleRunPosition: JustStyleCode;numer: Point;denom: Point): INTEGER; BEGIN CharToPixel := 0 END;FUNCTION NChar2Pixel(textBuf: Ptr;textLen: LONGINT;slop: Fixed;offset: LONGINT; direction: INTEGER;styleRunPosition: JustStyleCode;numer: Point;denom: Point): INTEGER; BEGIN NChar2Pixel := 0 END;PROCEDURE DrawJustified(textPtr: Ptr;textLength: LONGINT;slop: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point); BEGIN END;PROCEDURE NDrawJust(textPtr: Ptr;textLength: LONGINT;slop: Fixed;styleRunPosition: JustStyleCode; numer: Point;denom: Point); BEGIN END;PROCEDURE MeasureJustified(textPtr: Ptr;textLength: LONGINT;slop: Fixed;charLocs: Ptr; styleRunPosition: JustStyleCode;numer: Point;denom: Point); BEGIN END;PROCEDURE NMeasureJust(textPtr: Ptr;textLength: LONGINT;slop: Fixed;charLocs: Ptr; styleRunPosition: JustStyleCode;numer: Point;denom: Point); BEGIN END;FUNCTION NPortionText(textPtr: Ptr;textLen: LONGINT;styleRunPosition: JustStyleCode; numer: Point;denom: Point): Fixed; BEGIN NPortionText := 0 END;FUNCTION PortionLine(textPtr: Ptr;textLen: LONGINT;styleRunPosition: JustStyleCode; numer: Point;denom: Point): Fixed; BEGIN PortionLine := 0 END;PROCEDURE HiliteText(textPtr: Ptr;textLength: INTEGER;firstOffset: INTEGER; secondOffset: INTEGER;VAR offsets: OffsetTable); BEGIN END;PROCEDURE DrawJust(textPtr: Ptr;textLength: INTEGER;slop: INTEGER); BEGIN END;PROCEDURE MeasureJust(textPtr: Ptr;textLength: INTEGER;slop: INTEGER;charLocs: Ptr); BEGIN END;FUNCTION PortionText(textPtr: Ptr;textLength: LONGINT): Fixed; BEGIN PortionText := 0 END;FUNCTION VisibleLength(textPtr: Ptr;textLength: LONGINT): LONGINT; BEGIN VisibleLength := 0 END;PROCEDURE GetFormatOrder(ordering: FormatOrderPtr;firstFormat: INTEGER; lastFormat: INTEGER;lineRight: BOOLEAN;rlDirProc: Ptr;dirParam: Ptr); BEGIN END;PROCEDURE TextFont(font: INTEGER); BEGIN END;PROCEDURE TextFace(face: Style); BEGIN END;PROCEDURE TextMode(mode: INTEGER); BEGIN END;PROCEDURE TextSize(size: INTEGER); BEGIN END;PROCEDURE SpaceExtra(extra: Fixed); BEGIN END;PROCEDURE DrawChar(ch: CHAR); BEGIN END;PROCEDURE DrawString(s: Str255); BEGIN END;PROCEDURE DrawText(textBuf: Ptr;firstByte: INTEGER;byteCount: INTEGER); BEGIN END;FUNCTION CharWidth(ch: CHAR): INTEGER; BEGIN CharWidth := 0 END;FUNCTION StringWidth(s: Str255): INTEGER; BEGIN StringWidth := 0 END;FUNCTION TextWidth(textBuf: Ptr;firstByte: INTEGER;byteCount: INTEGER): INTEGER; BEGIN TextWidth := 0 END;PROCEDURE MeasureText(count: INTEGER;textAddr: Ptr;charLocs: Ptr); BEGIN END;PROCEDURE GetFontInfo(VAR info: FontInfo); BEGIN END;PROCEDURE CharExtra(extra: Fixed); BEGIN END;PROCEDURE StdText(count: INTEGER;textAddr: Ptr;numer: Point;denom: Point); BEGIN END;FUNCTION StdTxMeas(byteCount: INTEGER;textAddr: Ptr;VAR numer: Point;VAR denom: Point; VAR info: FontInfo): INTEGER; BEGIN StdTxMeas := 0 END; END.