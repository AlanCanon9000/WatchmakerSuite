{Created: Sunday, July 28, 1991 at 12:14 AM ToolUtils.p Pascal Interface to the Macintosh Libraries  Copyright Apple Computer, Inc. 1985-1992  All rights reserved    This file is used in these builds: Mac32 BigBang Sys606	Change History (most recent first):		 <5>	 3/12/92	DCL		For New Inside Mac Text volume: Moved GetString, Munger,									SetString, NewString, GetIndString to the new file:									TextUtils.[ph]		 <4>	 7/31/91	JL		Updated Copyright.		 <3>	 1/27/91	LN		Checked in Database generate file from DSG. made formal									parameter names match .h file.		<2>		10/2/90		JAL		Added Inlines for ScreenRes} UNIT ToolUtils; INTERFACE USES Types, Quickdraw, TextUtils;CONSTsysPatListID = 0;iBeamCursor = 1;crossCursor = 2;plusCursor = 3;watchCursor = 4;TYPEInt64Bit = RECORD hiLong: LONGINT; loLong: LONGINT; END;FUNCTION FixRatio(numer: INTEGER;denom: INTEGER): Fixed;FUNCTION FixMul(a: Fixed;b: Fixed): Fixed;FUNCTION FixRound(x: Fixed): INTEGER;PROCEDURE PackBits(VAR srcPtr: Ptr;VAR dstPtr: Ptr;srcBytes: INTEGER);PROCEDURE UnpackBits(VAR srcPtr: Ptr;VAR dstPtr: Ptr;dstBytes: INTEGER);FUNCTION BitTst(bytePtr: Ptr;bitNum: LONGINT): BOOLEAN;PROCEDURE BitSet(bytePtr: Ptr;bitNum: LONGINT);PROCEDURE BitClr(bytePtr: Ptr;bitNum: LONGINT);FUNCTION BitAnd(value1: LONGINT;value2: LONGINT): LONGINT;FUNCTION BitOr(value1: LONGINT;value2: LONGINT): LONGINT;FUNCTION BitXor(value1: LONGINT;value2: LONGINT): LONGINT;FUNCTION BitNot(value: LONGINT): LONGINT;FUNCTION BitShift(value: LONGINT;count: INTEGER): LONGINT;FUNCTION HiWord(x: LONGINT): INTEGER;FUNCTION LoWord(x: LONGINT): INTEGER;PROCEDURE LongMul(a: LONGINT;b: LONGINT;VAR result: Int64Bit);FUNCTION GetIcon(iconID: INTEGER): Handle;PROCEDURE PlotIcon(theRect: Rect;theIcon: Handle);FUNCTION GetPattern(patternID: INTEGER): PatHandle;FUNCTION GetCursor(cursorID: INTEGER): CursHandle;FUNCTION GetPicture(pictureID: INTEGER): PicHandle;FUNCTION SlopeFromAngle(angle: INTEGER): Fixed;FUNCTION AngleFromSlope(slope: Fixed): INTEGER;FUNCTION DeltaPoint(ptA: Point;ptB: Point): LONGINT;PROCEDURE ShieldCursor(shieldRect: Rect;offsetPt: Point);PROCEDURE ScreenRes(VAR scrnHRes: INTEGER;VAR scrnVRes: INTEGER);PROCEDURE GetIndPattern(VAR thePat: Pattern;patternListID: INTEGER;index: INTEGER);IMPLEMENTATIONFUNCTION FixRatio(numer: INTEGER;denom: INTEGER): Fixed; BEGIN FixRatio := 0 END;FUNCTION FixMul(a: Fixed;b: Fixed): Fixed; BEGIN FixMul := 0 END;FUNCTION FixRound(x: Fixed): INTEGER; BEGIN FixRound := 0 END;PROCEDURE PackBits(VAR srcPtr: Ptr;VAR dstPtr: Ptr;srcBytes: INTEGER); BEGIN END;PROCEDURE UnpackBits(VAR srcPtr: Ptr;VAR dstPtr: Ptr;dstBytes: INTEGER); BEGIN END;FUNCTION BitTst(bytePtr: Ptr; bitNum:LONGINT): BOOLEAN;BEGIN BitTst:=false; END;PROCEDURE BitSet(bytePtr: Ptr; bitNum:LONGINT);BEGIN END;PROCEDURE BitClr(bytePtr: Ptr; bitNum:LONGINT);BEGIN END;FUNCTION BitAnd(value1: LONGINT;value2: LONGINT): LONGINT; BEGIN BitAnd := 0; END;FUNCTION BitOr(value1,value2: LONGINT): LONGINT;BEGIN BitOr:= 0; END;FUNCTION BitXor  (value1,value2: LONGINT)  : LONGINT;BEGIN BitXor:= 0; END;FUNCTION BitNot  (value: LONGINT )  : LONGINT;BEGIN BitNot:= 0; END;FUNCTION BitShift(value: LONGINT;count: INTEGER): LONGINT; BEGIN BitShift := 0 END;FUNCTION HiWord(x: LONGINT): INTEGER; BEGIN HiWord := 0 END;FUNCTION LoWord(x: LONGINT): INTEGER; BEGIN LoWord := 0 END;PROCEDURE LongMul(a: LONGINT;b: LONGINT;VAR result: Int64Bit); BEGIN END;FUNCTION GetIcon(iconID: INTEGER): Handle; BEGIN GetIcon := new(Handle) END;PROCEDURE PlotIcon(theRect: Rect;theIcon: Handle); BEGIN END;FUNCTION GetPattern(patternID: INTEGER): PatHandle; BEGIN GetPattern := new(PatHandle) END;FUNCTION GetCursor(cursorID: INTEGER): CursHandle; BEGIN GetCursor := new(CursHandle) END;FUNCTION GetPicture(pictureID: INTEGER): PicHandle; BEGIN GetPicture := new(PicHandle) END;FUNCTION SlopeFromAngle(angle: INTEGER): Fixed; BEGIN SlopeFromAngle := 0 END;FUNCTION AngleFromSlope(slope: Fixed): INTEGER; BEGIN AngleFromSlope := 0; END;FUNCTION DeltaPoint(ptA: Point;ptB: Point): LONGINT; BEGIN DeltaPoint := 0 END;PROCEDURE ShieldCursor(shieldRect: Rect;offsetPt: Point); BEGIN END;PROCEDURE ScreenRes(VAR scrnHRes: INTEGER;VAR scrnVRes: INTEGER); BEGIN END;PROCEDURE GetIndPattern(VAR thePat: Pattern;patternListID: INTEGER;index: INTEGER); BEGIN END; END.