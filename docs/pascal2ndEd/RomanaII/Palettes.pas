{Created: Saturday, July 27, 1991 at 10:24 PM Palettes.p Pascal Interface to the Macintosh Libraries  Copyright Apple Computer, Inc. 1987-1991  All rights reserved    This file is used in these builds: BigBang	Change History (most recent first):		<11>	  8/8/91	JL		Fixed GetGray call. Wrong selector; someone translated 12									decimal to 12 hex.		<10>	 7/31/91	JL		Updated Copyright.		 <9>	 1/30/91	JL		checked in database generated file from dsg.		 <8>	 1/18/91	KON		Change SaveFore, SaveBack, RestoreFore, RestoreBack to coincide									with IM interfaces. [CEL]		 <7>	  1/9/91	dvb		Change return type of HasDepth to INTEGER.		 <6>	12/13/90	dvb		Make .h and .p and .a files consistent.		 <5>	 11/5/90	JL		Returned pmInhibit equates.		 <4>	 9/15/90	DC		added GetGray and CheckColors		 <3>	 6/19/90	DVB		Add in the latest PMgr dispatchs	To Do:} UNIT Palettes; INTERFACE USES Types, Quickdraw, Windows;CONSTpmCourteous = 0;							{Record use of color on each device touched.}pmTolerant = $0002;							{render ciRGB if ciTolerance is exceeded by best match.}pmAnimated = $0004;							{reserve an index on each device touched and render ciRGB.}pmExplicit = $0008;							{no reserve, no render, no record; stuff index into port.}pmWhite = $0010;pmBlack = $0020;pmInhibitG2 = $0100;pmInhibitC2 = $0200;pmInhibitG4 = $0400;pmInhibitC4 = $0800;pmInhibitG8 = $1000;pmInhibitC8 = $2000;{ NSetPalette Update Constants }pmNoUpdates = $8000;						{no updates}pmBkUpdates = $A000;						{background updates only}pmFgUpdates = $C000;						{foreground updates only}pmAllUpdates = $E000;						{all updates}TYPEColorInfo = RECORD ciRGB: RGBColor;							{true RGB values} ciUsage: INTEGER;							{color usage} ciTolerance: INTEGER;						{tolerance value} ciDataFields: ARRAY [0..2] OF INTEGER;		{private fields} END;PalettePtr = ^Palette;PaletteHandle = ^PalettePtr;Palette = RECORD pmEntries: INTEGER;						{entries in pmTable} pmDataFields: ARRAY [0..6] OF INTEGER;		{private fields} pmInfo: ARRAY [0..0] OF ColorInfo; END;PROCEDURE InitPalettes;FUNCTION NewPalette(entries: INTEGER;srcColors: CTabHandle;srcUsage: INTEGER; srcTolerance: INTEGER): PaletteHandle;FUNCTION GetNewPalette(PaletteID: INTEGER): PaletteHandle;PROCEDURE DisposePalette(srcPalette: PaletteHandle);PROCEDURE ActivatePalette(srcWindow: WindowPtr);PROCEDURE SetPalette(dstWindow: WindowPtr;srcPalette: PaletteHandle;cUpdates: BOOLEAN);PROCEDURE NSetPalette(dstWindow: WindowPtr;srcPalette: PaletteHandle;nCUpdates: INTEGER);FUNCTION GetPalette(srcWindow: WindowPtr): PaletteHandle;PROCEDURE CopyPalette(srcPalette: PaletteHandle;dstPalette: PaletteHandle; srcEntry: INTEGER;dstEntry: INTEGER;dstLength: INTEGER);PROCEDURE PmForeColor(dstEntry: INTEGER);PROCEDURE PmBackColor(dstEntry: INTEGER);PROCEDURE AnimateEntry(dstWindow: WindowPtr;dstEntry: INTEGER;srcRGB: RGBColor);PROCEDURE AnimatePalette(dstWindow: WindowPtr;srcCTab: CTabHandle;srcIndex: INTEGER; dstEntry: INTEGER;dstLength: INTEGER);PROCEDURE GetEntryColor(srcPalette: PaletteHandle;srcEntry: INTEGER;VAR dstRGB: RGBColor);PROCEDURE SetEntryColor(dstPalette: PaletteHandle;dstEntry: INTEGER;srcRGB: RGBColor);PROCEDURE GetEntryUsage(srcPalette: PaletteHandle;srcEntry: INTEGER;VAR dstUsage: INTEGER; VAR dstTolerance: INTEGER);PROCEDURE SetEntryUsage(dstPalette: PaletteHandle;dstEntry: INTEGER;srcUsage: INTEGER; srcTolerance: INTEGER);PROCEDURE CTab2Palette(srcCTab: CTabHandle;dstPalette: PaletteHandle;srcUsage: INTEGER; srcTolerance: INTEGER);PROCEDURE Palette2CTab(srcPalette: PaletteHandle;dstCTab: CTabHandle);FUNCTION Entry2Index(entry: INTEGER): LONGINT;PROCEDURE RestoreDeviceClut(gd: GDHandle);PROCEDURE ResizePalette(p: PaletteHandle;size: INTEGER);PROCEDURE SaveFore(VAR c: ColorSpec);PROCEDURE SaveBack(VAR c: ColorSpec);PROCEDURE RestoreFore(c: ColorSpec);PROCEDURE RestoreBack(c: ColorSpec);FUNCTION SetDepth(gd: GDHandle;depth: INTEGER;whichFlags: INTEGER;flags: INTEGER): OSErr;FUNCTION HasDepth(gd: GDHandle;depth: INTEGER;whichFlags: INTEGER;flags: INTEGER): INTEGER;FUNCTION PMgrVersion: INTEGER;PROCEDURE SetPaletteUpdates(p: PaletteHandle;updates: INTEGER);FUNCTION GetPaletteUpdates(p: PaletteHandle): INTEGER;FUNCTION GetGray(device: GDHandle;backGround: RGBColor;VAR foreGround: RGBColor): BOOLEAN; END.