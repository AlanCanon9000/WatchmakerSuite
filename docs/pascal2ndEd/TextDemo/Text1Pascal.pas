{ ×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××}{// Text1Pascal.p}{// ××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××}{//}{// This program demonstrates:}{//}{// ¥	A "bare-bones" monostyled text editor.}{//}{// ¥	A Help dialog which features the integrated scrolling of multistyled text and }{//		pictures.}{//}{// In the monostyled text editor demonstration, a panel is displayed at the bottom of all}{// opened windows.  This panel displays the edit record length, number of lines, line }{// height, destination rectangle (top), scroll bar value, and scroll bar maximum value. }{//}{// The bulk of the source code for the Help dialog is contained in the file HelpDialog.c.}{// The dialog itself displays information intended to assist the user in adapting the}{// Help dialog source code and resources to the requirements of his/her own application.}{//}{// The program utilises the following resources:}{//}{// ¥	An 'MBAR' resource, and 'MENU' resources for Apple, File, Edit, and Help dialog}{//		pop-up menus (preload, non-purgeable).  }{//}{// ¥	A 'WIND' resource (purgeable) (initially visible).  }{//}{// ¥	'CNTL' resources (purgeable) for the vertical scroll bars in the text editor window}{//		and Help dialog, and for the pop-up menu in the Help Dialog.}{//}{// ¥	An 'ALRT' resource (purgeable), and associated 'DITL' resource (purgeable), for the}{//		display of error messages.}{//     }{// ¥	A 'DLOG' resource (purgeable, initially invisible) and associated 'dctb' resource }{//		(purgeable) for the Help dialog.}{//}{// ¥	'DITL' resources (purgeable) for the 'ALRT' and 'DLOG' resources.}{//}{// ¥	'TEXT' and associated 'styl' resources (all purgeable) for the Help dialog.}{//}{// ¥	'PICT' resources (purgeable) for the Help dialog.}{//}{// ¥	A 'STR ' resource  (purgeable) containing error text strings.  }{//}{// ¥	A 'SIZE' resource with the acceptSuspendResumeEvents, doesActivateOnFGSwitch, and}{//		is32BitCompatible flags set.	  }{//}{// ××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××× }program Text1Pascal (input, output);	uses{$IFC UNDEFINED THINK_Pascal}		Menus, Types,{$ENDC}		Balloons, unit_doerroralert, unit_donewdocwindow,    unit_eventloop, unit_doinitmanagers,    unit_globals, unit_doadjustmenus, unit_files, unit_doeditmenu, unit_domenuchoice, unit_dofilemenu, unit_doopsysevent, unit_dohelpmenu, unit_doclosewindow;begin	gNumberOfWindows := 0;	ignoredWindowPtr := nil;	DoInitManagers;	menubarHdl := GetNewMBar(rMenubar);	if (menubarHdl = nil) then		DoErrorAlert(eMenuBar);	SetMenuBar(menubarHdl);	DrawMenuBar;	menuHdl := GetMHandle(mApple);	if (menuHdl = nil) then		DoErrorAlert(eMenu)	else		AddResMenu(menuHdl, 'DRVR');	theErr := HMGetHelpMenuHandle(menuHdl);	if (theErr = noErr) then		AppendMenu(menuHdl, 'Text1 Help')	else		DoErrorAlert(eMenu);	ignoredWindowPtr := DoNewDocWindow;	EventLoop;end.