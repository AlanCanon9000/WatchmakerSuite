unit unit_handle_the_menus;{File name :  HandleTheMenus.Pas  }{Function: Handle all menu selections.}{          This procedure is called when a menu item is selected.}{          There is one CASE statement for all Lists.  There is}{          another CASE for all the commands in each List.}{History: 12/12/90 Original by Prototyper. (Richard Dawkins)}{2015-11-06 Second Edition by Alan Canon}interface  uses unit_preferences;  {Handle menu selection}	function Handle_My_Menu (prefs: ArthromorphPreferencesHandle;    theMenu, theItem: integer): boolean;implementation  	uses{$IFC UNDEFINED THINK_Pascal}  Types, Quickdraw, Menus, Desk,{$ENDC}    unit_engineering_window, unit_genome_window, unit_breeding_window,    unit_about_arthromorphs, unit_init_the_menus, unit_disk, unit_prefs_dialog;    function handleFileMenu(prefs: ArthromorphPreferencesHandle; theItem: Integer): boolean;    var doneFlag: BOOLEAN;		begin      doneFlag := false;			case theItem of{Handle all commands in this menu list}				C_New:					begin            prefs^^.startingUp := True;            Open_Breeding_Window(prefs);					end;				C_Open:					begin						{Open_Breeding_Window(prefs);}{Open a window for this menu selection}						LoadArthromorph(prefs);					{Call the SFGetFile OS routine}					end;				C_Save_As:					begin						SaveArthromorph(prefs);					{Call the SFPutFile OS routine}					end;				C_Quit:					begin						doneFlag := TRUE;					end;				otherwise			end; {End of item case}      handleFileMenu := doneFlag;		end; {End for this list}  {Handle menu selections realtime}	function Handle_My_Menu (prefs: ArthromorphPreferencesHandle;    theMenu, theItem: integer): boolean;		var			DNA: integer;  			{For opening DAs}			DAName: Str255;    		{For getting DA name}			SavePort: GrafPtr; 		{Save current port when opening DAs}      doneFlag: boolean;	begin {Start of procedure}    doneFlag := false;		case theMenu of {Do selected menu list}			L_Apple: 				begin					case theItem of{Handle all commands in this menu list}						C_About_Arthromorphs: 							begin								Open_About_Arthromorphs(prefs);{Open a window for this menu selection}							end;						otherwise {Handle the DAs}							begin {Start of Otherwise}								GetPort(SavePort);{Save the current port}                {Get the name of the DA selected}								GetItem(GetMHandle(L_Apple), theItem, DAName);								DNA := OpenDeskAcc(DAName);{Open the DA selected}								SetPort(SavePort);{Restore to the saved port}							end; {End of Otherwise}					end; {End of item case}				end; {End for this list}			L_File:        doneFlag := handleFileMenu(prefs, theItem);  				{End for this list}			L_Operation: 				begin					case theItem of{Handle all commands in this menu list}						C_Breed: 							begin                prefs^^.resizing := true;								Open_Breeding_Window(prefs);{Open a window for this menu selection}								{Breed(prefs, theBoxes);}							end;						C_Show_as_Text: 							begin                Open_Genome_Window(prefs);							end;						C_Engineer: 							begin							  D_Engineering_Window(prefs^^.muts);							end;						otherwise					end; {End of item case}				end; {End for this list}			L_View: 				begin					case theItem of{Handle all commands in this menu list}						C_Preferences: 							begin								D_Preferences(prefs);{Call a dialog for this menu selection}							end;						otherwise					end; {End of item case}				end;{End for this list}			otherwise		end; {End for the Lists}		HiliteMenu(0); {Turn menu selection off}    Handle_My_Menu := doneFlag;	end; {procedure Handle_My_Menu}end. {unit}