unit  unit_about_arthromorphs;{File name: About_Arthromorphs.Pas}{Function: Handle a Window}{History: 12/12/90 Original by Prototyper.   }interfaceuses{$IFC UNDEFINED THINK_Pascal}{$ENDC}unit_preferences;{Initialize us so all our routines can be activated}procedure Init_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);{Close our window}procedure Close_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);{Open our window and draw everything}procedure Open_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);{Update our window, someone uncovered a part of us}procedure Update_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);{Handle action to our window, like controls}procedure Do_About_Arthromorphs;implementationuses{$IFC UNDEFINED THINK_Pascal}  Types, Memory, TextEdit, Quickdraw, Windows, QuickdrawText, Fonts,{$ENDC}  unit_watchdocrec;type  AboutArthromorphsDocRecHandle = ^AboutArthromorphsDocRecPtr;  AboutArthromorphsDocRecPtr = ^AboutArthromorphsDocRec;  AboutArthromorphsDocRec = RECORD    wDocRec: WatchDocRec;  end;var  vertPos: INTEGER;  fontHeight: INTEGER;procedure writeLine(theText: Str255);var  tempRect: Rect;begin  TextFont(systemFont);     {Set the font to draw in}  SetRect(tempRect, 16, vertPos, 272, vertPos + fontHeight);  TextBox(Pointer(Ord(@theText) + 1), length(theText), tempRect, teJustLeft);  vertPos := vertPos + fontHeight;end;{Initialize us so all our routines can be activated}procedure Init_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);begin                   {Start of Window initialize routine}  prefs^^.AboutArthromorphsWindow := nil;          {Make sure other routines know we are not valid yet}  vertPos := 45;end;                    {End of procedure}{Close our window}procedure Close_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);begin                   {Start of Window close routine}  with prefs^^ do  if (AboutArthromorphsWindow <> nil) then{See if we should close this window}  begin    DisposeHandle(Handle(GetWRefCon(AboutArthromorphsWindow)));    DisposeWindow(AboutArthromorphsWindow);{Clear window and controls}    AboutArthromorphsWindow := nil;        {Make sure other routines know we are open}  end;                {End for if (AboutArthromorphsWindow<>nil)}end;                    {End of procedure}{=================================}{Update our window, someone uncovered a part of us}procedure UpDate_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);var  SavePort: WindowPtr;       {Place to save the last port}begin                   {Start of Window update routine}  if (prefs^^.AboutArthromorphsWindow <> nil) then{Handle an open when already opened}  begin    GetPort(SavePort);      {Save the current port}    SetPort(prefs^^.AboutArthromorphsWindow);      {Set the port to my window}    writeLine('By Ted Kaehler and Richard Dawkins');    writeLine('Second edition by Alan Canon');    SetPort(SavePort);      {Restore the old port}  end;                {End for if (AboutArthromorphsWindow<>nil)}end;                    {End of procedure}{=================================}{Open our window and draw everything}procedure Open_About_Arthromorphs(prefs: ArthromorphPreferencesHandle);var theFontInfo: FontInfo; {For obtaining height}  rec: AboutArthromorphsDocRecHandle;begin                   {Start of Window open routine}  with prefs^^ do  begin    if (AboutArthromorphsWindow = nil) then      {Handle an open when already opened}      begin        AboutArthromorphsWindow := GetNewWindow(3, nil, Pointer(-1));{Get the window from the resource file}	      rec := AboutArthromorphsDocRecHandle(NewHandle(SizeOf(AboutArthromorphsDocRec)));        WatchDocRecHandle(rec)^^.resourceRefCon := GetWRefCon(AboutArthromorphsWindow);        SetWRefCon(AboutArthromorphsWindow, LONGINT(Ord(rec)));        SetPort(AboutArthromorphsWindow);      {Prepare to write into our window}        TextFont(systemFont);     {Set the font to draw in}        GetFontInfo(theFontInfo);        fontHeight := theFontInfo.ascent + theFontInfo.descent + theFontInfo.leading;        TextFont(applFont);     {Set the default application font}        ShowWindow(AboutArthromorphsWindow);     {Show the window now}        SelectWindow(AboutArthromorphsWindow);{Bring our window to the front}      end               {End for if (AboutArthromorphsWindow<>nil)}    else      SelectWindow(AboutArthromorphsWindow);{Already open, so show it}  end;end;                    {End of procedure}{Handle action to our window, like controls}procedure Do_About_Arthromorphs;begin                   {Start of Window handler}end; {End of procedure}end.                    {End of unit}