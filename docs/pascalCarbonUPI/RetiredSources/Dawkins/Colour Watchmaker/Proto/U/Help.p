unit Help;{File name: Help}{Function: Handle a modal dialog}{ History: 20/6/91 Original by Prototyper 3.0   }interfaceuses	PCommonExhibition, Common_Exhibition, {Common and types}	PUtils_Exhibition, Utils_Exhibition; {General Utilities}	{Init the modal dialog}	procedure D_Init_Help;	{Hook into the modal dialog filter routine}	function D_Filter_Help(theDialog: DialogPtr; var theEvent: EventRecord; var itemHit: integer):boolean;	{Refresh the modal dialog}	procedure D_Refresh_Help(theDialog: DialogPtr);	{Setup the modal dialog}	procedure D_Setup_Help(theDialog: DialogPtr);	{Hit in the modal dialog}	procedure D_Hit_Help(theDialog: DialogPtr; itemHit:integer; var ExitDialog:boolean);	{Exit the modal dialog}	procedure D_Exit_Help(theDialog: DialogPtr);{=======================================================}implementation{Routine: D_Init_Help}{Purpose: This routine is called while when the program is first run.}{	This is used for onetime initialization.}	procedure D_Init_Help;		begin     																{Start of init dialog}		end; 																	{End of procedure}{=======================================================}	{Routine: D_Filter_Help}	{Purpose: This routine is called while inside of the Modal Dialog filter}	{	theDialog is the dialog(alert) pointer}	{	theEvent is the event that we are to see if we should filter}	{	itemHit is the item we set if we handle the event ourselves}		function D_Filter_Help;			begin 																{Start of modal dialog filter hook}				D_Filter_Help := FALSE;   									{Let the modal routine handle it}			end;  																{End of function}{=======================================================}		{Routine: D_Refresh_Help}		{Purpose: Refresh the modal dialog}			procedure D_Refresh_Help;				begin  															{Start of Refresh dialog}				end;   															{End of procedure}{=======================================================}			{Routine: D_Setup_Help}			{Purpose: Setup the modal dialog}				procedure D_Setup_Help;					begin   														{Start of Setup dialog}					end;    														{End of procedure}{=======================================================}				{Routine: D_Hit_Help}				{Purpose: Hit in the modal dialog}					procedure D_Hit_Help;						begin    													{Start of Hit dialog}							if (ItemHit =Res_Dlg_OK5) then     				{Handle the Button being pressed}								begin								end;						end;     													{End of procedure}{=======================================================}					{Routine: D_Exit_Help}					{Purpose: Exit the modal dialog}						procedure D_Exit_Help;							begin     												{Start of Exit dialog}							end; 													{End of procedure}{=======================================================}end.    																		{End of unit}