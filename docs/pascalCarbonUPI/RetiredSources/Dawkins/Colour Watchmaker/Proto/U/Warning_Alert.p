unit Warning_Alert;{File name: Warning_Alert}{Function: Handle an alert}{ History: 20/6/91 Original by Prototyper 3.0   }interfaceuses	PCommonExhibition, Common_Exhibition, {Common and types}	PUtils_Exhibition, Utils_Exhibition; {General Utilities}	{Init the alert routine}	procedure Init_A_Warning_Alert;	{Hook into the alert filter routine}	function Filter_Warning_Alert(theDialog: DialogPtr; var theEvent: EventRecord; var itemHit: integer):boolean;	{Handle which item was hit}	procedure A_Hit_Warning_Alert(itemHit:integer);{=======================================================}implementation{Init the alert routine}	procedure Init_A_Warning_Alert;		begin     																{Start of procedure}		end; 																	{End of procedure}{=======================================================}	{This routine is called while inside of the Alert filter}	{theDialog is the dialog(alert) pointer}	{theEvent is the event that we are to see if we should filter}	{itemHit is the item we set if we handle the event ourselves}		function Filter_Warning_Alert;			begin 																{Start of alert filter hook}				Filter_Warning_Alert := FALSE; 							{Let the Alert routine handle it}			end;  																{End of function}{=======================================================}		{This routine is called after the alert has been responded to}		{itemHit is the item that was selected}			procedure A_Hit_Warning_Alert;				begin					{This is the default selection, when RETURN is pressed.}					if (Res_Alrt_OK3 = itemHit) then     					{See if this Button was selected}						begin						end;				end;end.    																		{End of unit}